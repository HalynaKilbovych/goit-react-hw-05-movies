{"version":3,"file":"static/js/415.e99f4812.chunk.js","mappings":"6TAIMA,G,QAAU,oCACVC,EAAW,+BAGJC,EAAmB,mCAAG,6GAEJC,EAAAA,EAAAA,IAAA,UAChBF,EADgB,wCACwBD,IAHpB,cAErBI,EAFqB,yBAKpBA,EAASC,KAAKC,SALM,gCAQ3BC,QAAQC,MAAR,OACAC,EAAAA,EAAAA,IAAM,mBATqB,yDAAH,qDAcnBC,EAAiB,mCAAG,WAAMC,GAAN,gGAENR,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACeD,EADf,kBACgCW,IAH1B,cAKQ,KAH/BP,EAFuB,QAKhBC,KAAKC,QAAQM,SACxBH,EAAAA,EAAAA,IAAM,oCANqB,kBAQtBL,EAASC,KAAKC,SARQ,iCAU7BG,EAAAA,EAAAA,IAAM,mBACNF,QAAQM,IAAR,MAX6B,yDAAH,sDAejBC,EAAiB,mCAAG,WAAMC,GAAN,gGAENZ,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAc,EADA,oBACmBf,IAHb,cAEvBI,EAFuB,yBAKtBA,EAASC,MALa,iCAO7BI,EAAAA,EAAAA,IAAM,mBACNF,QAAQM,IAAR,MAR6B,yDAAH,sDAYjBG,EAAiB,mCAAG,WAAMD,GAAN,gGAENZ,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAc,EADA,4BAC2Bf,IAHrB,cAKK,KAH5BI,EAFuB,QAKhBC,KAAKY,KAAKL,SACrBH,EAAAA,EAAAA,IAAM,6BANqB,kBAQtBL,EAASC,KAAKY,MARQ,iCAU7BR,EAAAA,EAAAA,IAAM,mBACNF,QAAQM,IAAR,MAX6B,yDAAH,sDAejBK,EAAiB,mCAAG,WAAMH,GAAN,gGAENZ,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAc,EADA,4BAC2Bf,IAHrB,cAKQ,KAH/BI,EAFuB,QAKhBC,KAAKC,QAAQM,SACxBH,EAAAA,EAAAA,IAAM,+BANqB,kBAQtBL,EAASC,KAAKC,SARQ,iCAU7BG,EAAAA,EAAAA,IAAM,mBACNF,QAAQM,IAAR,MAX6B,yDAAH,qD,oFC9DjBM,EAAYC,EAAAA,GAAAA,IAAH,wGAOTC,EAAcD,EAAAA,GAAAA,IAAH,0ZAmBXE,EAAYF,EAAAA,GAAAA,EAAH,2H,uCCvBTG,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACP,EAAD,UACGK,EAAOG,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACjC,OACE,SAACT,EAAD,WACE,UAAC,KAAD,CAAMU,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMR,GAA1C,WACE,gBACES,IACkB,OAAhBN,EAAA,0CACuCA,GACnCO,EAENC,IAAKP,KAEP,SAACP,EAAD,UAAYO,QAVEC,EAcrB,KAGN,C,uGCDD,UAtBuB,WAEnB,OAA0CO,EAAAA,EAAAA,UAAS,MAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KAWA,OATAC,EAAAA,EAAAA,YAAU,WAERD,GAAU,IACVvC,EAAAA,EAAAA,MAAsByC,MAAK,SAAAvC,GACzBmC,GAAiB,OAAInC,IACrBqC,GAAU,EACX,GACF,GAAE,KAGD,4BACGD,IAAU,SAAC,KAAD,IACVF,IAAiB,SAAC,IAAD,CAAYd,OAAQc,MAG3C,C","sources":["api/fetchAPI.js","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst API_KEY = 'c318186a7bfc382d3a0a4be08cb03883';\nconst BASE_URL = 'https://api.themoviedb.org/3'; \n\n\nexport const fetchTrendingMovies = async () => {\n      try {\n        const response = await axios.get(\n            `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`\n        );\n        return response.data.results;\n        \n      } catch (error) {\n        console.error(error);\n        toast(\"Something wrong\");\n      }\n};\n  \n\nexport const fetchSearchMovies = async query => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    if (response.data.results.length === 0) {\n      toast(\"Oops...There are no such movies!\");\n    }\n    return response.data.results;\n  } catch (error) {\n    toast(\"Something wrong\");\n    console.log(error);\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    toast(\"Something wrong\");\n    console.log(error);\n  }\n};\n\nexport const fetchMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    if (response.data.cast.length === 0) {\n      toast(\"Oops...There are no casts\");\n    }\n    return response.data.cast;\n  } catch (error) {\n    toast(\"Something wrong\");\n    console.log(error);\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    if (response.data.results.length === 0) {\n      toast(\"Oops...There are no reviews\");\n    }\n    return response.data.results;\n  } catch (error) {\n    toast(\"Something wrong\");\n    console.log(error);\n  }\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 10px;\n`;\n\nexport const CardWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-basis: calc((100% - 50px) / 5);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover:not(.active),\n  &:focus-visible:not(.active) {\n    transform: scale(0.9);\n  }\n  > a {\n    text-decoration: none; \n  }\n  img {\n    height: 365px;\n    object-fit: cover;\n  }\n`;\n\nexport const MovieName = styled.p`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: white; \n  text-align: center;\n`;","import { CardWrapper, Container, MovieName } from './MovieList.styled';\nimport { Link, useLocation } from 'react-router-dom';\nimport defaultPicture from '../../images/no-poster.jpg';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <Container>\n      {movies.map(({ poster_path, title, id }) => {\n        return (\n          <CardWrapper key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <img\n                src={\n                  poster_path !== null\n                    ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                    : defaultPicture\n                }\n                alt={title}\n              />\n              <MovieName>{title}</MovieName>\n            </Link>\n          </CardWrapper>\n        );\n      })}\n    </Container>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      poster_path: PropTypes.string,\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};","import { useState, useEffect } from \"react\";\nimport { fetchTrendingMovies } from \"api/fetchAPI\";\nimport { BallTriangle } from 'react-loader-spinner'\nimport { MoviesList } from \"components/MovieList/MovieList\";\n\n\nconst TrendingMovies = () => {\n\n    const [trendingFilms, setTrendingFilms] = useState(null);\n    const [onLoad, setOnLoad] = useState(false);\n  \n    useEffect(() => {\n      \n      setOnLoad(true);\n      fetchTrendingMovies().then(response => {\n        setTrendingFilms([...response]);\n        setOnLoad(false);\n      });\n    }, []);\n  \n    return (\n      <main>\n        {onLoad && <BallTriangle />}\n        {trendingFilms && <MoviesList movies={trendingFilms} />}\n      </main>\n    );\n  };\n\nexport default TrendingMovies;\n  "],"names":["API_KEY","BASE_URL","fetchTrendingMovies","axios","response","data","results","console","error","toast","fetchSearchMovies","query","length","log","fetchMovieDetails","movieId","fetchMovieCredits","cast","fetchMovieReviews","Container","styled","CardWrapper","MovieName","MoviesList","movies","location","useLocation","map","poster_path","title","id","to","state","from","src","defaultPicture","alt","useState","trendingFilms","setTrendingFilms","onLoad","setOnLoad","useEffect","then"],"sourceRoot":""}