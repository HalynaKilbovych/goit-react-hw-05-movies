{"version":3,"file":"static/js/549.5063ca39.chunk.js","mappings":"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","sources":["api/fetchAPI.js","components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst API_KEY = 'c318186a7bfc382d3a0a4be08cb03883';\nconst BASE_URL = 'https://api.themoviedb.org/3'; \n\n\nexport const fetchTrendingMovies = async () => {\n      try {\n        const response = await axios.get(\n            `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`\n        );\n        return response.data.results;\n        \n      } catch (error) {\n        console.error(error);\n        toast(\"Something wrong\");\n      }\n};\n  \n\nexport const fetchSearchMovies = async query => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    if (response.data.results.length === 0) {\n      toast(\"Oops...There are no such movies!\");\n    }\n    return response.data.results;\n  } catch (error) {\n    toast(\"Something wrong\");\n    console.log(error);\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    toast(\"Something wrong\");\n    console.log(error);\n  }\n};\n\nexport const fetchMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    if (response.data.cast.length === 0) {\n      toast(\"Oops...There are no casts\");\n    }\n    return response.data.cast;\n  } catch (error) {\n    toast(\"Something wrong\");\n    console.log(error);\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    if (response.data.results.length === 0) {\n      toast(\"Oops...There are no reviews\");\n    }\n    return response.data.results;\n  } catch (error) {\n    toast(\"Something wrong\");\n    console.log(error);\n  }\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 50px;\n\n  > img { \n    height: 500px;\n  }\n`;\n\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  max-width: 50%; \n`;\n\nexport const BackButton = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  text-transform: capitalize;\n  color: white;\n  text-decoration: none;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &.active {\n    color: #ec9706;\n  }\n  &:hover:not(.active),\n  &:focus-visible:not(.active) {\n    color: #ec9706;\n  }\n`;\n\nexport const Link = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  border: 2px solid orangered;\n  text-decoration: none;\n  color: white;\n  font-weight: 500;\n  max-width: 150px;\n  text-align: center;\n  &.active {\n    color: white;\n    background-color: orangered;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { fetchMovieDetails } from 'api/fetchAPI';\nimport { BallTriangle } from 'react-loader-spinner'\nimport { Container, Content, Link } from './MovieInfo.styled';\nimport defaultPicture from '../../images/no-poster.jpg';\nimport PropTypes from 'prop-types';\n\nconst MovieInfo = ({ movie, backPath}) => {\n    const [movieInfo, setMovieInfo] = useState(null);\n  \n    useEffect(() => {\n      const fetchMovie = async () => {\n        try {\n          const data = await fetchMovieDetails(movie.id);\n          setMovieInfo(data);\n        } catch (error) {\n          console.log(error);\n        }\n      };\n      fetchMovie();\n    }, [movie.id]);\n  \n\n  if (!movieInfo) {\n    return <BallTriangle/>;\n  }\n\n  const { poster_path, title, vote_average, genres, overview } = movieInfo;\n\n  return (\n    <Container>\n      <img\n        src={\n        poster_path !== null\n        ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n            : defaultPicture\n            }\n        alt={title}\n        />\n    <Content>\n        <h1>{title}</h1>\n        <p>Rating: {vote_average}</p>\n        <p>Genres: {genres.map(genre => genre.name).join(', ')}</p>\n        <p>{overview}</p>\n        <Link to=\"cast\" state={{ from: backPath }}>\n            Cast\n        </Link>\n        <Link to=\"reviews\" state={{ from: backPath }}>\n            Reviews\n        </Link>\n    </Content>\n\n    </Container>\n  );\n};\n\nMovieInfo.propTypes = {\n    movie: PropTypes.shape({\n        poster_path: PropTypes.string,\n        title: PropTypes.string,\n        vote_average: PropTypes.number,\n        genres: PropTypes.array,\n        overview: PropTypes.string,\n    }).isRequired,\n    backPath: PropTypes.object.isRequired,\n  };\n\nexport default MovieInfo;\n","import { useEffect, useState, Suspense } from 'react';\nimport { useParams, useLocation, Outlet} from 'react-router-dom';\nimport { fetchMovieDetails } from 'api/fetchAPI';\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\nimport { BackButton } from 'components/MovieInfo/MovieInfo.styled';\nimport { BallTriangle } from 'react-loader-spinner';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const getMovieDetails = async () => {\n      const movieDetails = await fetchMovieDetails(movieId);\n      setMovie(movieDetails);\n    };\n    getMovieDetails();\n  }, [movieId]);\n\n  if (!movie) return <BallTriangle />;\n\n    return (\n        <main style={{ padding: '0 60px 40px 60px' }}>\n          {movie && (\n            <>\n            <BackButton to={backLink}>Go back</BackButton>\n            <MovieInfo movie={movie} backPath={backLink} />\n            </>\n          )}\n    \n          <Suspense fallback={<BallTriangle />}>\n            <Outlet />\n          </Suspense>\n        </main>\n      );\n\n}\nexport default MovieDetails;\n"],"names":["API_KEY","BASE_URL","fetchTrendingMovies","axios","response","data","results","console","error","toast","fetchSearchMovies","query","length","log","fetchMovieDetails","movieId","fetchMovieCredits","cast","fetchMovieReviews","Container","styled","Content","BackButton","NavLink","Link","movie","backPath","useState","movieInfo","setMovieInfo","useEffect","fetchMovie","id","poster_path","title","vote_average","genres","overview","src","defaultPicture","alt","map","genre","name","join","to","state","from","useParams","setMovie","backLink","useLocation","getMovieDetails","movieDetails","style","padding","Suspense","fallback"],"sourceRoot":""}