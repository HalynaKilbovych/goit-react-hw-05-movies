{"version":3,"file":"static/js/437.839108d3.chunk.js","mappings":"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","sources":["api/fetchAPI.js","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/Form/Form.styled.js","components/Form/Form.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst API_KEY = 'c318186a7bfc382d3a0a4be08cb03883';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst showToast = (message) => {\n  if (!toast.isActive('notification')) {\n    toast(message, { toastId: 'notification' });\n  }\n};\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n    showToast('Something went wrong');\n  }\n};\n\nexport const fetchSearchMovies = async (query) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    if (response.data.results.length === 0) {\n      showToast('Oops...There are no such movies!');\n    }\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n    showToast('Something went wrong');\n  }\n};\n\nexport const fetchMovieDetails = async (movieId) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    showToast('Something went wrong');\n  }\n};\n\nexport const fetchMovieCredits = async (movieId) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    if (response.data.cast.length === 0) {\n      showToast('Oops...There are no casts');\n    }\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n    showToast('Something went wrong');\n  }\n};\n\nexport const fetchMovieReviews = async (movieId) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    if (response.data.results.length === 0) {\n      showToast('Oops...There are no reviews');\n    }\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n    showToast('Something went wrong');\n  }\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 10px;\n`;\n\nexport const CardWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-basis: calc((100% - 50px) / 5);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover:not(.active),\n  &:focus-visible:not(.active) {\n    transform: scale(0.9);\n  }\n  > a {\n    text-decoration: none; \n  }\n  img {\n    height: 365px;\n    object-fit: cover;\n  }\n\n@media only screen and (min-width: 320px) {\n  flex-basis: 100%;\n}\n\n@media only screen and (min-width: 760px) {\n  flex-basis: 40%;\n}\n\n@media only screen and (min-width: 1200px) {\n  flex-basis: calc((100% - 50px) / 5);\n}\n`;\n\nexport const MovieName = styled.p`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: white; \n  text-align: center;\n`;","import { CardWrapper, Container, MovieName } from './MovieList.styled';\nimport { Link, useLocation } from 'react-router-dom';\nimport defaultPicture from '../../images/no-poster.jpg';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <Container>\n      {movies.map(({ poster_path, title, id }) => {\n        return (\n          <CardWrapper key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <img\n                src={\n                  poster_path !== null\n                    ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                    : defaultPicture\n                }\n                alt={title}\n              />\n              <MovieName>{title}</MovieName>\n            </Link>\n          </CardWrapper>\n        );\n      })}\n    </Container>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      poster_path: PropTypes.string,\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Form = styled.form`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  width: 100%;\n  max-width: 500px;\n  border-radius: 15px;\n`;\n\nexport const Field = styled.div`\n  position: relative;\n  width: 100%;\n`;\n\nexport const Label = styled.label`\n  position: absolute;\n  top: 50%;\n  left: 16px;\n  transform: translateY(-50%);\n  padding: 0 4px;\n  font-size: 16px;\n  color: #fefefe;\n  pointer-events: none;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  Input:focus ~ &,\n  Input:not(:placeholder-shown) ~ & {\n    transform: translateY(-34px) scale(0.8);\n    color: #ec9706;\n  }\n  Input:not(:focus) ~ & {\n    color: #fefefe;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  height: 50px;\n  font-size: 16px;\n  letter-spacing: 1.4px;\n  color: #ec9706;\n  background-color: transparent;\n  border: 1px solid #fefefe;\n  border-radius: 10px;\n  outline: none;\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:focus {\n    border-color: #ec9706;\n    box-shadow: 0px 8px 12px -4px rgba(236, 151, 6, 0.32);\n  }\n  &:not(:focus) {\n    color: #fefefe;\n  }\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 50%;\n  right: 16px;\n  transform: translateY(-50%);\n  padding: 0;\n  color: #fefefe;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    color: #ec9706;\n  }\n`;","import { useState } from 'react';\nimport { BsSearch} from 'react-icons/bs';\nimport PropTypes from 'prop-types';\nimport { Container, Form, Field, Label, Input, Button } from './Form.styled';\nimport { toast } from 'react-toastify';\n\nexport const SearchForm = ({ onSubmit }) => {\n    const [query, setQuery] = useState('')\n\n    const handleChange = e => setQuery(e.target.value);\n\n    const submitHandler = e => {\n      e.preventDefault();\n\n      if(query.trim() === \"\") { \n        return toast(\"Wrong query\"); \n      }\n      onSubmit(query);\n      resetForm();\n    };\n  \n    const resetForm = () => setQuery('');\n\n    return (\n            <Container>\n            <Form onSubmit={submitHandler}>\n                <Field>\n                <Button type=\"submit\">\n                <BsSearch size={24} />\n                </Button>\n                <Input\n                    type=\"text\"\n                    name=\"query\"\n                    value={query}\n                    autoComplete=\"off\"\n                    placeholder=\" \"\n                    onChange={handleChange}\n                />\n                <Label>Search movies</Label>\n\n                </Field>\n            </Form>\n            </Container>\n    );\n    };\n\n\nSearchForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  }; \n\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { MoviesList } from 'components/MovieList/MovieList';\nimport { SearchForm } from 'components/Form/Form';\nimport { fetchSearchMovies } from 'api/fetchAPI';\nimport { Loader } from \"components/Loader/Loader\";\nimport { toast } from 'react-toastify';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [onLoad, setOnLoad] = useState(false);\n  const [error, setError] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchValue = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!searchValue) return;\n    setOnLoad(true);\n    const searchMovies = async () => {\n      try {\n        const data = await fetchSearchMovies(searchValue);\n        setMovies(data);\n      } catch (error) {\n        setError('Something wrong');\n      } finally { \n        setOnLoad(false);\n      }\n    };\n    searchMovies();\n\n  }, [searchValue]);\n\n  const onInputSearch = value => {\n    setSearchParams({ query: value });\n  };\n\n  return (\n    <main>\n      <SearchForm onSubmit={onInputSearch} />\n      {onLoad && <Loader />}\n      {error && <div>{toast(error)}</div>}\n      {movies && <MoviesList movies={movies} />}\n    </main>\n  );\n};\nexport default Movies;"],"names":["API_KEY","BASE_URL","showToast","message","toast","toastId","fetchTrendingMovies","axios","response","data","results","console","error","fetchSearchMovies","query","length","log","fetchMovieDetails","movieId","fetchMovieCredits","cast","fetchMovieReviews","Container","styled","CardWrapper","MovieName","MoviesList","movies","location","useLocation","map","poster_path","title","id","to","state","from","src","defaultPicture","alt","Form","Field","Label","Input","Button","SearchForm","onSubmit","useState","setQuery","resetForm","e","preventDefault","trim","type","size","name","value","autoComplete","placeholder","onChange","target","setMovies","onLoad","setOnLoad","setError","useSearchParams","searchParams","setSearchParams","searchValue","get","useEffect","searchMovies","Loader"],"sourceRoot":""}